#!/bin/bash

PUBLIC_TEMPLATE=PublicHeader.h
PRIVATE_TEMPLATE=PrivateHeader.h
SOURCE_TEMPLATE=Source.c
TEST_TEMPLATE=Test.c
DOX_MODULE=DocModule.dox

function printUsage() {
  echo "Usage: $(basename $0) [options]"
  echo
  echo "Script generates new files for a Offbrand compatible class with the"
  echo "specified name. All code required for reference counting and inclusion"
  echo "in OffBrand container structures is in place, providing the common"
  echo "starting platform for creating all Offbrand classes"
  echo
  echo "Required Options:"
  echo "-----------------"
  echo "-c <class name>"
  echo "   Name of the newly created class. Should not contain any file"
  echo "   extensions or special characters (such as *,.!? etc.)"
  echo
  echo "Optional Options:"
  echo "-----------------"
  echo "-a <author name>"
  echo "   Author name for the newly created class. Must be in quotes if the"
  echo "   author's name contains any spaces. Default value is \"anonymous\""
  echo "-h"
  echo "   Print usage and exit"
  echo "-t <template directory>"
  echo "   Directory where offbrand class template files can be located. By"
  echo "   default this directory is set to scripts/templates, which is the"
  echo "   path to the offbrand template directory from the root directory of"
  echo "   the library"
  echo
}

#option variables
classname=
author_name="anonymous"
temp_dir="scripts/templates"
temp_default=

while getopts a:c:hm:t: option
do
  case $option in
  a)  author_name="$OPTARG" ;;
  c)  classname="$OPTARG" ;;
  h)  printUsage
      exit 0;;
  t)  temp_dir="$OPTARG"
      temp_default=1 ;;
  ?)  printUsage
      exit 1;;
  esac
done


#check usage
if [[ ! $classname ]]
then
  echo "Class name was not specified"
  printUsage
  exit 1
fi

if [[ ! -d $temp_dir ]]
then
  if [[ $temp_default ]]
  then
    echo "Default template path scripts/templates/ is not valid from the"
    echo "current directory"
  else
    echo "Template path $temp_dir is not valid from the"
    echo "current directory"
  fi
fi

#error tracker
with_err=

#Generate substitution strings
file_name=$(echo $classname | tr '[a-z]' '[A-Z]') #capitalize class name

#input templates
module_template="$(dirname $temp_dir)/$(basename $temp_dir)/$DOX_MODULE"
public_template="$(dirname $temp_dir)/$(basename $temp_dir)/$PUBLIC_TEMPLATE"
private_template="$(dirname $temp_dir)/$(basename $temp_dir)/$PRIVATE_TEMPLATE"
source_template="$(dirname $temp_dir)/$(basename $temp_dir)/$SOURCE_TEMPLATE"
test_template="$(dirname $temp_dir)/$(basename $temp_dir)/$TEST_TEMPLATE"

#output filenames
doc_module=$classname"_module.dox"
public_header=$classname".h"
private_header=$classname"_private.h"
source_file=$classname".c"
test_file=$classname"_test.c"

echo

#substitute class name into template files and write files with proper file
#names to the current directory
if [[ -e $module_template ]]
then
  cat $module_template | sed "s/%CLASSNAME%/$classname/g" | \
    sed "s/%CLASSAUTHOR%/$author_name/g" | \
    sed "s/%MACRONAME%/$file_name/g" > $doc_module
  echo "Add class description to newly created Doxygen Module: $doc_module"
else
  echo "Module documentation template does not exist in $temp_dir"
  with_err=1
fi

if [[ -e $public_template ]]
then
  cat $public_template | sed "s/%CLASSNAME%/$classname/g" | \
    sed "s/%CLASSAUTHOR%/$author_name/g" | \
    sed "s/%MACRONAME%/$file_name/g" > $public_header
  echo "Add public class method declarations to newly created file:"
  echo "$public_header"
else
  echo "Public header template does not exist in $temp_dir"
  with_err=1
fi

if [[ -e $private_template ]]
then
  cat $private_template | sed "s/%CLASSNAME%/$classname/g" | \
    sed "s/%CLASSAUTHOR%/$author_name/g" | \
    sed "s/%MACRONAME%/$file_name/g" > $private_header
  echo "Add private class method declarations and members to newly created"
  echo "file:  $private_header"
else
  echo "Private header template does not exist in $temp_dir"
  with_err=1
fi

if [[ -e $source_template ]]
then
  cat $source_template | sed "s/%CLASSNAME%/$classname/g" | \
    sed "s/%CLASSAUTHOR%/$author_name/g" | \
    sed "s/%MACRONAME%/$file_name/g" > $source_file
  echo "Add method implementation to newly created file: $source_file"
else
  echo "Source file template does not exist in $temp_dir"
  with_err=1
fi

if [[ -e $test_template ]]
then
  cat $test_template | sed "s/%CLASSNAME%/$classname/g" | \
    sed "s/%CLASSAUTHOR%/$author_name/g" | \
    sed "s/%MACRONAME%/$file_name/g" > $test_file
  echo "Add unit tests to newly created file: $test_file"
else
  echo "Test file template does not exist in $temp_dir"
  with_err=1
fi

echo ""

if [[ $with_err ]]
then
  echo "$classname offbrand compatible class created, although some template"
  echo "files could not be found and class skeleton may be incomplete"
else
  echo "$classname offbrand compatible class created."
fi
echo
